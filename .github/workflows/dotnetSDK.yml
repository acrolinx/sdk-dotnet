name: .NET SDK

on:
  push:
    branches: [ BuildMigration ]

  schedule:
    - cron: "30 5 * * *"

jobs:

  build:

    strategy:
      matrix:
        configuration: [Release]

    runs-on: windows-latest  # For a list of available runner types, refer to
                             # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    env:
      Solution_Name: Acrolinx.Net/Acrolinx.Net.sln                                        # Replace with your solution name, i.e. MyWpfApp.sln.
      Test_Project_Path: Acrolinx.Net/Acrolinx.Net.Tests/Acrolinx.Net.Tests.csproj        # Replace with the path to your test project, i.e. MyWpfApp.Tests\MyWpfApp.Tests.csproj.
      BUILD_NUMBER: ${{ github.run_number }}
      VERSION: "1.0.0"

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    # Install the .NET Core workload
    - name: Install .NET 5.0.x
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x

    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Nuget restore
      uses: nuget/setup-nuget@v1
    - run: nuget restore $env:Solution_Name

    - name: Restore nuget
      run: msbuild $env:Solution_Name /t:Restore /p:Configuration=$env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}

    - name: Build SDK
      shell: powershell
      run: |
        $version = git describe --abbrev=0 --tags
        $version = $version.substring(1) + "." + $env:BUILD_NUMBER
        msbuild $env:Solution_Name /t:rebuild /p:Configuration=$env:Configuration /p:Version=$version
      env:
        Configuration: ${{ matrix.configuration }}

    - name: tree
      run: tree

    - name: Code signing
      env:
        CERTIFICATE: ${{ secrets.CERTIFICATE }}
        CERTIFICATE_PASSWORD: ${{ secrets.CERTIFICATE_PASSWORD }}
        BINARY: "Acrolinx.Net/Acrolinx.Net/bin/Release/Acrolinx.Net.dll"
        SIGNTOOL: "C:/Program Files (x86)/Windows Kits/10/bin/10.0.17763.0/x86/signtool.exe"
      shell: powershell
      run : |
          $ErrorActionPreference = 'stop'
          $env:CERTIFICATE | Out-File -FilePath ./Certificate
          certutil -decode Certificate AcrolinxCertificate.pfx
          & $env:SIGNTOOL sign /f AcrolinxCertificate.pfx /p $env:CERTIFICATE_PASSWORD /tr http://timestamp.digicert.com /td sha256 /fd sha256 $env:BINARY
          del .\Certificate
          del AcrolinxCertificate.pfx
